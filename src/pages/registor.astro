<!-- ---
import Layout from "../layouts/Layout.astro";
import { verifyToken } from "../utils/auth";


export const prerender = false;


const token = Astro.cookies.get("auth-token")?.value;
if (token) {
    const user = verifyToken(token);
    if (user) {
        return Astro.redirect("/dashboard");
    }
}
---

<Layout title="Registro - Perseo Ecommerce">
    <div
        class="min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8"
    >
        <div class="sm:mx-auto sm:w-full sm:max-w-md">
            <div class="text-center">
                <h2 class="mt-6 text-3xl font-extrabold text-gray-900">
                    Crear Cuenta
                </h2>
                <p class="mt-2 text-sm text-gray-600">
                    Únete a Perseo Ecommerce
                </p>
            </div>
        </div>

        <div class="mt-8 sm:mx-auto sm:w-full sm:max-w-md">
            <div class="bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10">
<div id="message" class="hidden mb-4 p-4 rounded-md">
    <p id="message-text" class="text-sm font-medium"></p>
</div>

<form id="registerForm" class="space-y-6">
    <div>
        <label for="username" class="block text-sm font-medium text-gray-700">
            Nombre de Usuario
        </label>
        <div class="mt-1">
            <input
                id="username"
                name="username"
                type="text"
                required
                class="appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
                placeholder="tu_usuario"
            />
        </div>
    </div>

    <div>
        <label for="email" class="block text-sm font-medium text-gray-700">
            Email
        </label>
        <div class="mt-1">
            <input
                id="email"
                name="email"
                type="email"
                required
                class="appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
                placeholder="email@ejemplo.com"
            />
        </div>
    </div>

    <div>
        <label for="password" class="block text-sm font-medium text-gray-700">
            Contraseña
        </label>
        <div class="mt-1">
            <input
                id="password"
                name="password"
                type="password"
                required
                class="appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
                placeholder="Mínimo 6 caracteres"
            />
        </div>
    </div>

    <div>
        <label
            for="confirmPassword"
            class="block text-sm font-medium text-gray-700"
        >
            Confirmar Contraseña
        </label>
        <div class="mt-1">
            <input
                id="confirmPassword"
                name="confirmPassword"
                type="password"
                required
                class="appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"
                placeholder="Repite tu contraseña"
            />
        </div>
    </div>

    <div>
        <button
            type="submit"
            id="submitBtn"
            class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed"
        >
            <span id="submitText">Crear Cuenta</span>
            <svg
                id="loadingSpinner"
                class="hidden animate-spin -mr-1 ml-3 h-5 w-5 text-white"
                xmlns="http://www.w3.org/2000/svg"
                fill="none"
                viewBox="0 0 24 24"
            >
                <circle
                    class="opacity-25"
                    cx="12"
                    cy="12"
                    r="10"
                    stroke="currentColor"
                    stroke-width="4"></circle>
                <path
                    class="opacity-75"
                    fill="currentColor"
                    d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"
                ></path>
            </svg>
        </button>
    </div>
</form>

<div class="mt-6">
    <div class="relative">
        <div class="absolute inset-0 flex items-center">
            <div class="w-full border-t border-gray-300"></div>
        </div>
        <div class="relative flex justify-center text-sm">
            <span class="px-2 bg-white text-gray-500">¿Ya tienes cuenta?</span>
        </div>
    </div>

    <div class="mt-6">
        <a
            href="/3141592653589793"
            class="w-full flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors duration-200"
        >
            Iniciar Sesión
        </a>
    </div>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        const form = document.getElementById("registerForm") as HTMLFormElement;
        const submitBtn = document.getElementById(
            "submitBtn",
        ) as HTMLButtonElement;
        const submitText = document.getElementById(
            "submitText",
        ) as HTMLSpanElement;
        const loadingSpinner = document.getElementById(
            "loadingSpinner",
        ) as HTMLElement;
        const messageDiv = document.getElementById("message") as HTMLDivElement;
        const messageText = document.getElementById(
            "message-text",
        ) as HTMLParagraphElement;

        function showMessage(message: string, isError: boolean = false) {
            messageDiv.className = `mb-4 p-4 rounded-md ${isError ? "bg-red-50 border border-red-200" : "bg-green-50 border border-green-200"}`;
            messageText.className = `text-sm font-medium ${isError ? "text-red-800" : "text-green-800"}`;
            messageText.textContent = message;
            messageDiv.classList.remove("hidden");
        }

        function hideMessage() {
            messageDiv.classList.add("hidden");
        }

        form.addEventListener("submit", async function (e) {
            e.preventDefault();

            hideMessage();

            submitBtn.disabled = true;
            submitText.textContent = "Creando cuenta...";
            loadingSpinner.classList.remove("hidden");

            const formData = new FormData(form);
            const data = {
                username: formData.get("username") as string,
                email: formData.get("email") as string,
                password: formData.get("password") as string,
                confirmPassword: formData.get("confirmPassword") as string,
            };

            try {
                const response = await fetch("/api/auth/", {
                    method: "POST",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify(data),
                });

                const result = await response.json();

                if (result.success) {
                    showMessage(
                        "¡Cuenta creada exitosamente! Redirigiendo...",
                        false,
                    );
                    setTimeout(() => {
                        window.location.href = "/dashboard";
                    }, 1500);
                } else {
                    showMessage(result.message, true);
                }
            } catch (error) {
                console.error("Error:", error);
                showMessage("Error de conexión. Inténtalo de nuevo.", true);
            } finally {
                submitBtn.disabled = false;
                submitText.textContent = "Crear Cuenta";
                loadingSpinner.classList.add("hidden");
            }
        });
    });
</script> -->
