---
import Layout from "../layouts/Layout.astro";
import Sidebar from "../components/Sidebar.astro";
import ComponentExample from "../components/ComponentExample.astro";
---

<Layout title="Componentes - Perseo Ecommerce">
  <div class="flex min-h-screen bg-gray-50">
    <Sidebar currentPage="components" />

    <main class="flex-1 py-8 px-16 ml-64">
      <div class="mx-auto">
        <h1 class="text-4xl font-bold text-gray-900 mb-8">Componentes</h1>

        <div class="bg-white rounded-lg shadow-sm p-8 mb-8">
          <h2 class="text-2xl font-semibold mb-4">Componentes Reutilizables</h2>
          <p class="text-gray-700">
            Perseo incluye una biblioteca completa de componentes React
            reutilizables para construir tu interfaz de ecommerce rápidamente.
          </p>
        </div>

        <div class="space-y-8">
          <ComponentExample
            title="ProductCard"
            description="Componente para mostrar información de productos en grillas o listas"
            props={[
              {
                name: "product",
                type: "Product",
                description: "Objeto del producto",
              },
              {
                name: "onAddToCart",
                type: "function",
                description: "Callback al agregar al carrito",
              },
              {
                name: "showQuickView",
                type: "boolean",
                description: "Mostrar botón de vista rápida",
              },
            ]}
            usage={`import { ProductCard } from '@perseo/components';

<ProductCard
  product={product}
  onAddToCart={(productId) => addToCart(productId)}
  showQuickView={true}
/>`}
          />

          <ComponentExample
            title="ShoppingCart"
            description="Componente del carrito de compras con funcionalidad completa"
            props={[
              {
                name: "items",
                type: "CartItem[]",
                description: "Items del carrito",
              },
              {
                name: "onUpdateQuantity",
                type: "function",
                description: "Actualizar cantidad",
              },
              {
                name: "onRemoveItem",
                type: "function",
                description: "Remover item",
              },
              {
                name: "onCheckout",
                type: "function",
                description: "Proceder al checkout",
              },
            ]}
            usage={`import { ShoppingCart } from '@perseo/components';

<ShoppingCart
  items={cartItems}
  onUpdateQuantity={(id, quantity) => updateQuantity(id, quantity)}
  onRemoveItem={(id) => removeItem(id)}
  onCheckout={() => goToCheckout()}
/>`}
          />

          <ComponentExample
            title="ProductFilter"
            description="Componente de filtros para productos con categorías, precios y más"
            props={[
              {
                name: "categories",
                type: "Category[]",
                description: "Lista de categorías",
              },
              {
                name: "priceRange",
                type: "PriceRange",
                description: "Rango de precios",
              },
              {
                name: "onFilterChange",
                type: "function",
                description: "Callback al cambiar filtros",
              },
            ]}
            usage={`import { ProductFilter } from '@perseo/components';

<ProductFilter
  categories={categories}
  priceRange={{ min: 0, max: 1000 }}
  onFilterChange={(filters) => applyFilters(filters)}
/>`}
          />

          <ComponentExample
            title="CheckoutForm"
            description="Formulario completo de checkout con validación"
            props={[
              {
                name: "onSubmit",
                type: "function",
                description: "Callback al enviar formulario",
              },
              {
                name: "loading",
                type: "boolean",
                description: "Estado de carga",
              },
              {
                name: "paymentMethods",
                type: "PaymentMethod[]",
                description: "Métodos de pago disponibles",
              },
            ]}
            usage={`import { CheckoutForm } from '@perseo/components';

<CheckoutForm
  onSubmit={(data) => processOrder(data)}
  loading={isProcessing}
  paymentMethods={['stripe', 'paypal']}
/>`}
          />

          <ComponentExample
            title="UserProfile"
            description="Componente de perfil de usuario con edición"
            props={[
              { name: "user", type: "User", description: "Datos del usuario" },
              {
                name: "onUpdate",
                type: "function",
                description: "Callback al actualizar perfil",
              },
              {
                name: "editable",
                type: "boolean",
                description: "Permitir edición",
              },
            ]}
            usage={`import { UserProfile } from '@perseo/components';

<UserProfile
  user={currentUser}
  onUpdate={(userData) => updateProfile(userData)}
  editable={true}
/>`}
          />
        </div>
      </div>
    </main>
  </div>
</Layout>
