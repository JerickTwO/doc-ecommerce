---
interface Props {
  method: string;
  endpoint: string;
  title: string;
  description: string;
  parameters?: Array<{name: string, type: string, description: string}>;
  requestBody?: string;
  response: string;
}

const { method, endpoint, title, description, parameters, requestBody, response } = Astro.props;

const methodColors = {
  GET: 'bg-green-100 text-green-800',
  POST: 'bg-blue-100 text-blue-800',
  PUT: 'bg-yellow-100 text-yellow-800',
  DELETE: 'bg-red-100 text-red-800'
};
---

<div class="bg-white rounded-lg shadow-sm border border-gray-200 mb-6">
  <div class="p-6 border-b border-gray-200">
    <div class="flex items-center gap-3 mb-2">
      <span class={`px-2 py-1 rounded text-xs font-semibold ${methodColors[method]}`}>
        {method}
      </span>
      <code class="text-lg font-mono text-gray-800">{endpoint}</code>
    </div>
    <h3 class="text-xl font-semibold text-gray-900 mb-2">{title}</h3>
    <p class="text-gray-600">{description}</p>
  </div>
  
  <div class="p-6 space-y-6">
    {parameters && parameters.length > 0 && (
      <div>
        <h4 class="text-lg font-semibold mb-3">Parámetros</h4>
        <div class="overflow-x-auto">
          <table class="min-w-full divide-y divide-gray-200">
            <thead class="bg-gray-50">
              <tr>
                <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase">Nombre</th>
                <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase">Tipo</th>
                <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase">Descripción</th>
              </tr>
            </thead>
            <tbody class="divide-y divide-gray-200">
              {parameters.map((param) => (
                <tr>
                  <td class="px-4 py-2 text-sm font-mono text-gray-900">{param.name}</td>
                  <td class="px-4 py-2 text-sm text-gray-600">{param.type}</td>
                  <td class="px-4 py-2 text-sm text-gray-600">{param.description}</td>
                </tr>
              ))}
            </tbody>
          </table>
        </div>
      </div>
    )}
    
    {requestBody && (
      <div>
        <h4 class="text-lg font-semibold mb-3">Request Body</h4>
        <pre class="bg-gray-900 text-gray-100 p-4 rounded-lg overflow-x-auto"><code>{requestBody}</code></pre>
      </div>
    )}
    
    <div>
      <h4 class="text-lg font-semibold mb-3">Respuesta</h4>
      <pre class="bg-gray-900 text-gray-100 p-4 rounded-lg overflow-x-auto"><code>{response}</code></pre>
    </div>
  </div>
</div>
