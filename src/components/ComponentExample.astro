---
interface Props {
  title: string;
  description: string;
  props: Array<{name: string, type: string, description: string}>;
  usage: string;
}

const { title, description, props, usage } = Astro.props as Props;
---

<div class="bg-white rounded-lg shadow-sm border border-gray-200 mb-6">
  <div class="p-6 border-b border-gray-200">
    <h3 class="text-xl font-semibold text-gray-900 mb-2">{title}</h3>
    <p class="text-gray-600">{description}</p>
  </div>
  
  <div class="p-6 space-y-6">
    <div>
      <h4 class="text-lg font-semibold mb-3">Props</h4>
      <div class="overflow-x-auto">
        <table class="min-w-full divide-y divide-gray-200">
          <thead class="bg-gray-50">
            <tr>
              <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase">Prop</th>
              <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase">Tipo</th>
              <th class="px-4 py-2 text-left text-xs font-medium text-gray-500 uppercase">Descripci√≥n</th>
            </tr>
          </thead>
          <tbody class="divide-y divide-gray-200">
            {props.map((prop) => (
              <tr>
                <td class="px-4 py-2 text-sm font-mono text-gray-900">{prop.name}</td>
                <td class="px-4 py-2 text-sm text-blue-600">{prop.type}</td>
                <td class="px-4 py-2 text-sm text-gray-600">{prop.description}</td>
              </tr>
            ))}
          </tbody>
        </table>
      </div>
    </div>
    
    <div>
      <h4 class="text-lg font-semibold mb-3">Uso</h4>
      <pre class="bg-gray-900 text-gray-100 p-4 rounded-lg overflow-x-auto"><code>{usage}</code></pre>
    </div>
  </div>
</div>
