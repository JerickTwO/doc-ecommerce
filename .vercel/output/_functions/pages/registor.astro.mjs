/* empty css                                            */
import { c as createAstro, a as createComponent, e as renderTemplate } from '../chunks/astro/server_BTInrGQy.mjs';
import 'kleur/colors';
import 'clsx';
export { renderers } from '../renderers.mjs';

var __freeze = Object.freeze;
var __defProp = Object.defineProperty;
var __template = (cooked, raw) => __freeze(__defProp(cooked, "raw", { value: __freeze(raw || cooked.slice()) }));
var _a;
const $$Astro = createAstro("https://docs.perseo.com");
const $$Registor = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$Registor;
  return renderTemplate(_a || (_a = __template(['<!-- ---\nimport Layout from "../layouts/Layout.astro";\nimport { verifyToken } from "../utils/auth";\n\n\nexport const prerender = false;\n\n\nconst token = Astro.cookies.get("auth-token")?.value;\nif (token) {\n    const user = verifyToken(token);\n    if (user) {\n        return Astro.redirect("/dashboard");\n    }\n}\n---\n\n<Layout title="Registro - Perseo Ecommerce">\n    <div\n        class="min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8"\n    >\n        <div class="sm:mx-auto sm:w-full sm:max-w-md">\n            <div class="text-center">\n                <h2 class="mt-6 text-3xl font-extrabold text-gray-900">\n                    Crear Cuenta\n                </h2>\n                <p class="mt-2 text-sm text-gray-600">\n                    \xDAnete a Perseo Ecommerce\n                </p>\n            </div>\n        </div>\n\n        <div class="mt-8 sm:mx-auto sm:w-full sm:max-w-md">\n            <div class="bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10">\n<div id="message" class="hidden mb-4 p-4 rounded-md">\n    <p id="message-text" class="text-sm font-medium"></p>\n</div>\n\n<form id="registerForm" class="space-y-6">\n    <div>\n        <label for="username" class="block text-sm font-medium text-gray-700">\n            Nombre de Usuario\n        </label>\n        <div class="mt-1">\n            <input\n                id="username"\n                name="username"\n                type="text"\n                required\n                class="appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"\n                placeholder="tu_usuario"\n            />\n        </div>\n    </div>\n\n    <div>\n        <label for="email" class="block text-sm font-medium text-gray-700">\n            Email\n        </label>\n        <div class="mt-1">\n            <input\n                id="email"\n                name="email"\n                type="email"\n                required\n                class="appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"\n                placeholder="email@ejemplo.com"\n            />\n        </div>\n    </div>\n\n    <div>\n        <label for="password" class="block text-sm font-medium text-gray-700">\n            Contrase\xF1a\n        </label>\n        <div class="mt-1">\n            <input\n                id="password"\n                name="password"\n                type="password"\n                required\n                class="appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"\n                placeholder="M\xEDnimo 6 caracteres"\n            />\n        </div>\n    </div>\n\n    <div>\n        <label\n            for="confirmPassword"\n            class="block text-sm font-medium text-gray-700"\n        >\n            Confirmar Contrase\xF1a\n        </label>\n        <div class="mt-1">\n            <input\n                id="confirmPassword"\n                name="confirmPassword"\n                type="password"\n                required\n                class="appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"\n                placeholder="Repite tu contrase\xF1a"\n            />\n        </div>\n    </div>\n\n    <div>\n        <button\n            type="submit"\n            id="submitBtn"\n            class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed"\n        >\n            <span id="submitText">Crear Cuenta</span>\n            <svg\n                id="loadingSpinner"\n                class="hidden animate-spin -mr-1 ml-3 h-5 w-5 text-white"\n                xmlns="http://www.w3.org/2000/svg"\n                fill="none"\n                viewBox="0 0 24 24"\n            >\n                <circle\n                    class="opacity-25"\n                    cx="12"\n                    cy="12"\n                    r="10"\n                    stroke="currentColor"\n                    stroke-width="4"></circle>\n                <path\n                    class="opacity-75"\n                    fill="currentColor"\n                    d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"\n                ></path>\n            </svg>\n        </button>\n    </div>\n</form>\n\n<div class="mt-6">\n    <div class="relative">\n        <div class="absolute inset-0 flex items-center">\n            <div class="w-full border-t border-gray-300"></div>\n        </div>\n        <div class="relative flex justify-center text-sm">\n            <span class="px-2 bg-white text-gray-500">\xBFYa tienes cuenta?</span>\n        </div>\n    </div>\n\n    <div class="mt-6">\n        <a\n            href="/login"\n            class="w-full flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors duration-200"\n        >\n            Iniciar Sesi\xF3n\n        </a>\n    </div>\n</div>\n\n<script>\n    document.addEventListener("DOMContentLoaded", function () {\n        const form = document.getElementById("registerForm") as HTMLFormElement;\n        const submitBtn = document.getElementById(\n            "submitBtn",\n        ) as HTMLButtonElement;\n        const submitText = document.getElementById(\n            "submitText",\n        ) as HTMLSpanElement;\n        const loadingSpinner = document.getElementById(\n            "loadingSpinner",\n        ) as HTMLElement;\n        const messageDiv = document.getElementById("message") as HTMLDivElement;\n        const messageText = document.getElementById(\n            "message-text",\n        ) as HTMLParagraphElement;\n\n        function showMessage(message: string, isError: boolean = false) {\n            messageDiv.className = `mb-4 p-4 rounded-md ${isError ? "bg-red-50 border border-red-200" : "bg-green-50 border border-green-200"}`;\n            messageText.className = `text-sm font-medium ${isError ? "text-red-800" : "text-green-800"}`;\n            messageText.textContent = message;\n            messageDiv.classList.remove("hidden");\n        }\n\n        function hideMessage() {\n            messageDiv.classList.add("hidden");\n        }\n\n        form.addEventListener("submit", async function (e) {\n            e.preventDefault();\n\n            hideMessage();\n\n            submitBtn.disabled = true;\n            submitText.textContent = "Creando cuenta...";\n            loadingSpinner.classList.remove("hidden");\n\n            const formData = new FormData(form);\n            const data = {\n                username: formData.get("username") as string,\n                email: formData.get("email") as string,\n                password: formData.get("password") as string,\n                confirmPassword: formData.get("confirmPassword") as string,\n            };\n\n            try {\n                const response = await fetch("/api/auth/", {\n                    method: "POST",\n                    headers: {\n                        "Content-Type": "application/json",\n                    },\n                    body: JSON.stringify(data),\n                });\n\n                const result = await response.json();\n\n                if (result.success) {\n                    showMessage(\n                        "\xA1Cuenta creada exitosamente! Redirigiendo...",\n                        false,\n                    );\n                    setTimeout(() => {\n                        window.location.href = "/dashboard";\n                    }, 1500);\n                } else {\n                    showMessage(result.message, true);\n                }\n            } catch (error) {\n                console.error("Error:", error);\n                showMessage("Error de conexi\xF3n. Int\xE9ntalo de nuevo.", true);\n            } finally {\n                submitBtn.disabled = false;\n                submitText.textContent = "Crear Cuenta";\n                loadingSpinner.classList.add("hidden");\n            }\n        });\n    });\n<\/script> -->'], ['<!-- ---\nimport Layout from "../layouts/Layout.astro";\nimport { verifyToken } from "../utils/auth";\n\n\nexport const prerender = false;\n\n\nconst token = Astro.cookies.get("auth-token")?.value;\nif (token) {\n    const user = verifyToken(token);\n    if (user) {\n        return Astro.redirect("/dashboard");\n    }\n}\n---\n\n<Layout title="Registro - Perseo Ecommerce">\n    <div\n        class="min-h-screen bg-gray-50 flex flex-col justify-center py-12 sm:px-6 lg:px-8"\n    >\n        <div class="sm:mx-auto sm:w-full sm:max-w-md">\n            <div class="text-center">\n                <h2 class="mt-6 text-3xl font-extrabold text-gray-900">\n                    Crear Cuenta\n                </h2>\n                <p class="mt-2 text-sm text-gray-600">\n                    \xDAnete a Perseo Ecommerce\n                </p>\n            </div>\n        </div>\n\n        <div class="mt-8 sm:mx-auto sm:w-full sm:max-w-md">\n            <div class="bg-white py-8 px-4 shadow sm:rounded-lg sm:px-10">\n<div id="message" class="hidden mb-4 p-4 rounded-md">\n    <p id="message-text" class="text-sm font-medium"></p>\n</div>\n\n<form id="registerForm" class="space-y-6">\n    <div>\n        <label for="username" class="block text-sm font-medium text-gray-700">\n            Nombre de Usuario\n        </label>\n        <div class="mt-1">\n            <input\n                id="username"\n                name="username"\n                type="text"\n                required\n                class="appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"\n                placeholder="tu_usuario"\n            />\n        </div>\n    </div>\n\n    <div>\n        <label for="email" class="block text-sm font-medium text-gray-700">\n            Email\n        </label>\n        <div class="mt-1">\n            <input\n                id="email"\n                name="email"\n                type="email"\n                required\n                class="appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"\n                placeholder="email@ejemplo.com"\n            />\n        </div>\n    </div>\n\n    <div>\n        <label for="password" class="block text-sm font-medium text-gray-700">\n            Contrase\xF1a\n        </label>\n        <div class="mt-1">\n            <input\n                id="password"\n                name="password"\n                type="password"\n                required\n                class="appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"\n                placeholder="M\xEDnimo 6 caracteres"\n            />\n        </div>\n    </div>\n\n    <div>\n        <label\n            for="confirmPassword"\n            class="block text-sm font-medium text-gray-700"\n        >\n            Confirmar Contrase\xF1a\n        </label>\n        <div class="mt-1">\n            <input\n                id="confirmPassword"\n                name="confirmPassword"\n                type="password"\n                required\n                class="appearance-none block w-full px-3 py-2 border border-gray-300 rounded-md placeholder-gray-400 focus:outline-none focus:ring-indigo-500 focus:border-indigo-500 sm:text-sm"\n                placeholder="Repite tu contrase\xF1a"\n            />\n        </div>\n    </div>\n\n    <div>\n        <button\n            type="submit"\n            id="submitBtn"\n            class="w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors duration-200 disabled:opacity-50 disabled:cursor-not-allowed"\n        >\n            <span id="submitText">Crear Cuenta</span>\n            <svg\n                id="loadingSpinner"\n                class="hidden animate-spin -mr-1 ml-3 h-5 w-5 text-white"\n                xmlns="http://www.w3.org/2000/svg"\n                fill="none"\n                viewBox="0 0 24 24"\n            >\n                <circle\n                    class="opacity-25"\n                    cx="12"\n                    cy="12"\n                    r="10"\n                    stroke="currentColor"\n                    stroke-width="4"></circle>\n                <path\n                    class="opacity-75"\n                    fill="currentColor"\n                    d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"\n                ></path>\n            </svg>\n        </button>\n    </div>\n</form>\n\n<div class="mt-6">\n    <div class="relative">\n        <div class="absolute inset-0 flex items-center">\n            <div class="w-full border-t border-gray-300"></div>\n        </div>\n        <div class="relative flex justify-center text-sm">\n            <span class="px-2 bg-white text-gray-500">\xBFYa tienes cuenta?</span>\n        </div>\n    </div>\n\n    <div class="mt-6">\n        <a\n            href="/login"\n            class="w-full flex justify-center py-2 px-4 border border-gray-300 rounded-md shadow-sm text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 transition-colors duration-200"\n        >\n            Iniciar Sesi\xF3n\n        </a>\n    </div>\n</div>\n\n<script>\n    document.addEventListener("DOMContentLoaded", function () {\n        const form = document.getElementById("registerForm") as HTMLFormElement;\n        const submitBtn = document.getElementById(\n            "submitBtn",\n        ) as HTMLButtonElement;\n        const submitText = document.getElementById(\n            "submitText",\n        ) as HTMLSpanElement;\n        const loadingSpinner = document.getElementById(\n            "loadingSpinner",\n        ) as HTMLElement;\n        const messageDiv = document.getElementById("message") as HTMLDivElement;\n        const messageText = document.getElementById(\n            "message-text",\n        ) as HTMLParagraphElement;\n\n        function showMessage(message: string, isError: boolean = false) {\n            messageDiv.className = \\`mb-4 p-4 rounded-md \\${isError ? "bg-red-50 border border-red-200" : "bg-green-50 border border-green-200"}\\`;\n            messageText.className = \\`text-sm font-medium \\${isError ? "text-red-800" : "text-green-800"}\\`;\n            messageText.textContent = message;\n            messageDiv.classList.remove("hidden");\n        }\n\n        function hideMessage() {\n            messageDiv.classList.add("hidden");\n        }\n\n        form.addEventListener("submit", async function (e) {\n            e.preventDefault();\n\n            hideMessage();\n\n            submitBtn.disabled = true;\n            submitText.textContent = "Creando cuenta...";\n            loadingSpinner.classList.remove("hidden");\n\n            const formData = new FormData(form);\n            const data = {\n                username: formData.get("username") as string,\n                email: formData.get("email") as string,\n                password: formData.get("password") as string,\n                confirmPassword: formData.get("confirmPassword") as string,\n            };\n\n            try {\n                const response = await fetch("/api/auth/", {\n                    method: "POST",\n                    headers: {\n                        "Content-Type": "application/json",\n                    },\n                    body: JSON.stringify(data),\n                });\n\n                const result = await response.json();\n\n                if (result.success) {\n                    showMessage(\n                        "\xA1Cuenta creada exitosamente! Redirigiendo...",\n                        false,\n                    );\n                    setTimeout(() => {\n                        window.location.href = "/dashboard";\n                    }, 1500);\n                } else {\n                    showMessage(result.message, true);\n                }\n            } catch (error) {\n                console.error("Error:", error);\n                showMessage("Error de conexi\xF3n. Int\xE9ntalo de nuevo.", true);\n            } finally {\n                submitBtn.disabled = false;\n                submitText.textContent = "Crear Cuenta";\n                loadingSpinner.classList.add("hidden");\n            }\n        });\n    });\n<\/script> -->'])));
}, "C:/Users/Jerick/DEV/AstroJS/doc-ecommerce/src/pages/registor.astro", void 0);

const $$file = "C:/Users/Jerick/DEV/AstroJS/doc-ecommerce/src/pages/registor.astro";
const $$url = "/registor";

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
    __proto__: null,
    default: $$Registor,
    file: $$file,
    url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };
