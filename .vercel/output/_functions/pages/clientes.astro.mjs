/* empty css                                            */
import { c as createAstro, a as createComponent, d as renderComponent, e as renderTemplate, f as addAttribute, m as maybeRenderHead } from '../chunks/astro/server_BTInrGQy.mjs';
import 'kleur/colors';
import { $ as $$Layout } from '../chunks/Layout_3tWj6AhR.mjs';
export { renderers } from '../renderers.mjs';

var __freeze = Object.freeze;
var __defProp = Object.defineProperty;
var __template = (cooked, raw) => __freeze(__defProp(cooked, "raw", { value: __freeze(raw || cooked.slice()) }));
var _a;
const $$Astro = createAstro("https://docs.perseo.com");
const $$Index = createComponent(async ($$result, $$props, $$slots) => {
  const Astro2 = $$result.createAstro($$Astro, $$props, $$slots);
  Astro2.self = $$Index;
  const res = await fetch(Astro2.url.origin + "/api/clientes");
  const json = await res.json();
  if (!Array.isArray(json)) {
    throw new Error(
      "La respuesta no es un arreglo. Recibido: " + JSON.stringify(json)
    );
  }
  const clientes = json;
  return renderTemplate`${renderComponent($$result, "Layout", $$Layout, { "title": "Gesti\xF3n de Clientes" }, { "default": async ($$result2) => renderTemplate(_a || (_a = __template([" ", '<div class="min-h-screen bg-gray-50"> <div class="max-w-4xl mx-auto px-6 py-8"> <!-- Header --> <div class="mb-12"> <a href="/dashboard" class="inline-flex items-center gap-2 text-sm text-gray-600 hover:text-gray-900 transition-colors mb-4"> <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path> </svg>\nVolver al Dashboard\n</a> <h1 class="text-3xl font-light text-gray-900 tracking-tight mb-2">\nGesti\xF3n de Clientes\n</h1> <p class="text-gray-600">\nAdministra tu cartera de clientes de forma sencilla\n</p> </div> <!-- Formulario de Creaci\xF3n --> <div class="bg-white rounded-lg shadow-sm border border-gray-100 mb-8"> <div class="px-6 py-4 border-b border-gray-100"> <div class="flex items-center gap-2"> <svg class="w-5 h-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path> </svg> <h2 class="text-lg font-medium text-gray-900">Nuevo Cliente</h2> </div> <p class="text-sm text-gray-600 mt-1">\nIngresa los datos del nuevo cliente\n</p> </div> <div class="p-6"> <form id="createForm" class="space-y-4"> <div class="grid grid-cols-1 md:grid-cols-2 gap-4"> <div class="space-y-2"> <label for="razon_social" class="block text-sm font-medium text-gray-700">Raz\xF3n Social</label> <input id="razon_social" name="razon_social" type="text" placeholder="Ingrese la raz\xF3n social" required class="w-full px-3 py-2 border border-gray-200 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-gray-400 focus:border-gray-400 transition-colors"> </div> <div class="space-y-2"> <label for="ruc" class="block text-sm font-medium text-gray-700">RUC</label> <input id="ruc" name="ruc" type="text" placeholder="Ingrese el RUC (13 d\xEDgitos)" required minlength="13" maxlength="13" pattern="[0-9]{13}" inputmode="numeric" title="El RUC debe contener exactamente 13 d\xEDgitos num\xE9ricos" class="w-full px-3 py-2 border border-gray-200 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-gray-400 focus:border-gray-400 transition-colors"> </div> </div> <button type="submit" class="inline-flex items-center gap-2 px-4 py-2 bg-gray-900 text-white text-sm font-medium rounded-md hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 transition-colors"> <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path> </svg>\nCrear Cliente\n</button> </form> </div> </div> <!-- Lista de Clientes --> <div class="bg-white rounded-lg shadow-sm border border-gray-100"> <header class="px-6 py-4 flex items-center justify-between gap-4"> <div class="flex flex-col justify-center"> <div class="flex items-center gap-2"> <svg class="w-5 h-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path> </svg> <h2 class="text-lg font-medium text-gray-900">\nClientes Registrados\n</h2> </div> <p class="text-sm text-gray-600 mt-1"> ', " ", ' </p> </div> <!-- Campo de b\xFAsqueda con SVG --> <div class="relative w-full md:w-72"> <svg class="absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-4.35-4.35m1.35-4.65a7 7 0 11-14 0 7 7 0 0114 0z"></path> </svg> <input id="search" type="search" placeholder="Buscar por Raz\xF3n Social o RUC" class="w-full pl-10 pr-3 py-2 border border-gray-200 rounded-md shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-400 focus:border-gray-400 transition-colors"> </div> </header> ', ' </div> </div> </div> <script type="module">\n    document\n      .querySelector("#createForm")\n      ?.addEventListener("submit", async (e) => {\n        e.preventDefault();\n        const form = e.target;\n        const data = Object.fromEntries(new FormData(form));\n        data.ruc = (data.ruc || "").trim();\n        data.razon_social = (data.razon_social || "").trim();\n\n        if (!/^\\d{13}$/.test(data.ruc)) {\n          alert("El RUC debe contener exactamente 13 d\xEDgitos num\xE9ricos");\n          return;\n        }\n\n        try {\n          const response = await fetch("/api/clientes", {\n            method: "POST",\n            headers: { "Content-Type": "application/json" },\n            body: JSON.stringify(data),\n          });\n\n          if (response.ok) {\n            location.reload();\n          } else {\n            const { message } = await response.json().catch(() => ({}));\n            alert(message || "Error al crear el cliente");\n          }\n        } catch (error) {\n          console.error("Error:", error);\n          alert("Error de red o servidor");\n        }\n      });\n\n    window.deleteCliente = async (id) => {\n      if (!confirm("\xBFEst\xE1 seguro de eliminar este cliente?")) return;\n\n      try {\n        const response = await fetch("/api/clientes/" + id, {\n          method: "DELETE",\n        });\n        if (response.ok) {\n          location.reload();\n        } else {\n          alert("Error al eliminar el cliente");\n        }\n      } catch (error) {\n        console.error("Error:", error);\n        alert("Error al eliminar el cliente");\n      }\n    };\n\n    // --- Buscador din\xE1mico ---\n    const searchInput = document.querySelector("#search");\n    const rows = [...document.querySelectorAll("[data-razon-social]")];\n    const emptyState = document.querySelector("#emptyState");\n\n    function applyFilter(term = "") {\n      term = term.toLowerCase().trim();\n      let visible = 0;\n\n      rows.forEach((row) => {\n        const { razonSocial, ruc } = row.dataset;\n        const match = !term || razonSocial.includes(term) || ruc.includes(term);\n        row.style.display = match ? "" : "none";\n        if (match) visible++;\n      });\n\n      if (emptyState) emptyState.style.display = visible ? "none" : "";\n    }\n\n    searchInput?.addEventListener("input", (e) => applyFilter(e.target.value));\n  <\/script> '], [" ", '<div class="min-h-screen bg-gray-50"> <div class="max-w-4xl mx-auto px-6 py-8"> <!-- Header --> <div class="mb-12"> <a href="/dashboard" class="inline-flex items-center gap-2 text-sm text-gray-600 hover:text-gray-900 transition-colors mb-4"> <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path> </svg>\nVolver al Dashboard\n</a> <h1 class="text-3xl font-light text-gray-900 tracking-tight mb-2">\nGesti\xF3n de Clientes\n</h1> <p class="text-gray-600">\nAdministra tu cartera de clientes de forma sencilla\n</p> </div> <!-- Formulario de Creaci\xF3n --> <div class="bg-white rounded-lg shadow-sm border border-gray-100 mb-8"> <div class="px-6 py-4 border-b border-gray-100"> <div class="flex items-center gap-2"> <svg class="w-5 h-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path> </svg> <h2 class="text-lg font-medium text-gray-900">Nuevo Cliente</h2> </div> <p class="text-sm text-gray-600 mt-1">\nIngresa los datos del nuevo cliente\n</p> </div> <div class="p-6"> <form id="createForm" class="space-y-4"> <div class="grid grid-cols-1 md:grid-cols-2 gap-4"> <div class="space-y-2"> <label for="razon_social" class="block text-sm font-medium text-gray-700">Raz\xF3n Social</label> <input id="razon_social" name="razon_social" type="text" placeholder="Ingrese la raz\xF3n social" required class="w-full px-3 py-2 border border-gray-200 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-gray-400 focus:border-gray-400 transition-colors"> </div> <div class="space-y-2"> <label for="ruc" class="block text-sm font-medium text-gray-700">RUC</label> <input id="ruc" name="ruc" type="text" placeholder="Ingrese el RUC (13 d\xEDgitos)" required minlength="13" maxlength="13" pattern="[0-9]{13}" inputmode="numeric" title="El RUC debe contener exactamente 13 d\xEDgitos num\xE9ricos" class="w-full px-3 py-2 border border-gray-200 rounded-md shadow-sm focus:outline-none focus:ring-2 focus:ring-gray-400 focus:border-gray-400 transition-colors"> </div> </div> <button type="submit" class="inline-flex items-center gap-2 px-4 py-2 bg-gray-900 text-white text-sm font-medium rounded-md hover:bg-gray-800 focus:outline-none focus:ring-2 focus:ring-gray-500 focus:ring-offset-2 transition-colors"> <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path> </svg>\nCrear Cliente\n</button> </form> </div> </div> <!-- Lista de Clientes --> <div class="bg-white rounded-lg shadow-sm border border-gray-100"> <header class="px-6 py-4 flex items-center justify-between gap-4"> <div class="flex flex-col justify-center"> <div class="flex items-center gap-2"> <svg class="w-5 h-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path> </svg> <h2 class="text-lg font-medium text-gray-900">\nClientes Registrados\n</h2> </div> <p class="text-sm text-gray-600 mt-1"> ', " ", ' </p> </div> <!-- Campo de b\xFAsqueda con SVG --> <div class="relative w-full md:w-72"> <svg class="absolute left-3 top-1/2 -translate-y-1/2 w-4 h-4 text-gray-400 pointer-events-none" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-4.35-4.35m1.35-4.65a7 7 0 11-14 0 7 7 0 0114 0z"></path> </svg> <input id="search" type="search" placeholder="Buscar por Raz\xF3n Social o RUC" class="w-full pl-10 pr-3 py-2 border border-gray-200 rounded-md shadow-sm focus:outline-none focus:ring-1 focus:ring-gray-400 focus:border-gray-400 transition-colors"> </div> </header> ', ' </div> </div> </div> <script type="module">\n    document\n      .querySelector("#createForm")\n      ?.addEventListener("submit", async (e) => {\n        e.preventDefault();\n        const form = e.target;\n        const data = Object.fromEntries(new FormData(form));\n        data.ruc = (data.ruc || "").trim();\n        data.razon_social = (data.razon_social || "").trim();\n\n        if (!/^\\\\d{13}$/.test(data.ruc)) {\n          alert("El RUC debe contener exactamente 13 d\xEDgitos num\xE9ricos");\n          return;\n        }\n\n        try {\n          const response = await fetch("/api/clientes", {\n            method: "POST",\n            headers: { "Content-Type": "application/json" },\n            body: JSON.stringify(data),\n          });\n\n          if (response.ok) {\n            location.reload();\n          } else {\n            const { message } = await response.json().catch(() => ({}));\n            alert(message || "Error al crear el cliente");\n          }\n        } catch (error) {\n          console.error("Error:", error);\n          alert("Error de red o servidor");\n        }\n      });\n\n    window.deleteCliente = async (id) => {\n      if (!confirm("\xBFEst\xE1 seguro de eliminar este cliente?")) return;\n\n      try {\n        const response = await fetch("/api/clientes/" + id, {\n          method: "DELETE",\n        });\n        if (response.ok) {\n          location.reload();\n        } else {\n          alert("Error al eliminar el cliente");\n        }\n      } catch (error) {\n        console.error("Error:", error);\n        alert("Error al eliminar el cliente");\n      }\n    };\n\n    // --- Buscador din\xE1mico ---\n    const searchInput = document.querySelector("#search");\n    const rows = [...document.querySelectorAll("[data-razon-social]")];\n    const emptyState = document.querySelector("#emptyState");\n\n    function applyFilter(term = "") {\n      term = term.toLowerCase().trim();\n      let visible = 0;\n\n      rows.forEach((row) => {\n        const { razonSocial, ruc } = row.dataset;\n        const match = !term || razonSocial.includes(term) || ruc.includes(term);\n        row.style.display = match ? "" : "none";\n        if (match) visible++;\n      });\n\n      if (emptyState) emptyState.style.display = visible ? "none" : "";\n    }\n\n    searchInput?.addEventListener("input", (e) => applyFilter(e.target.value));\n  <\/script> '])), maybeRenderHead(), clientes.length, clientes.length === 1 ? "cliente registrado" : "clientes registrados", clientes.length === 0 ? renderTemplate`<div id="emptyState" class="text-center py-12"> <svg class="w-12 h-12 mx-auto mb-4 text-gray-300" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path> </svg> <p class="text-gray-500 mb-1">No hay clientes registrados</p> <p class="text-sm text-gray-400">
Crea tu primer cliente usando el formulario de arriba
</p> </div>` : renderTemplate`<div class="divide-y divide-gray-100"> ${clientes.map((cliente) => renderTemplate`<div class="px-6 py-4 hover:bg-gray-50 transition-colors"${addAttribute(cliente.razon_social.toLowerCase(), "data-razon-social")}${addAttribute(cliente.ruc, "data-ruc")}> <div class="flex items-center justify-between"> <div class="flex items-center gap-3 flex-1 min-w-0"> <div class="flex-shrink-0 w-10 h-10 bg-gray-100 rounded-full flex items-center justify-center"> <svg class="w-5 h-5 text-gray-600" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 21V5a2 2 0 00-2-2H7a2 2 0 00-2 2v16m14 0h2m-2 0h-5m-9 0H3m2 0h5M9 7h1m-1 4h1m4-4h1m-1 4h1m-5 10v-5a1 1 0 011-1h2a1 1 0 011 1v5m-4 0h4"></path> </svg> </div> <div class="flex-1 min-w-0"> <a${addAttribute(`/clientes/${cliente.id}`, "href")} class="block hover:text-gray-900 transition-colors"> <h3 class="text-sm font-medium text-gray-900 truncate"> ${cliente.razon_social} </h3> <p class="text-sm text-gray-500">
RUC: ${cliente.ruc} </p> </a> </div> </div> <button${addAttribute(`deleteCliente(${cliente.id})`, "onclick")} title="Eliminar cliente" class="p-2 text-gray-400 hover:text-red-600 hover:bg-red-50 rounded-md transition-colors"> <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"></path> </svg> </button> </div> </div>`)} </div>`) })}`;
}, "C:/Users/Jerick/DEV/AstroJS/doc-ecommerce/src/pages/clientes/index.astro", void 0);

const $$file = "C:/Users/Jerick/DEV/AstroJS/doc-ecommerce/src/pages/clientes/index.astro";
const $$url = "/clientes";

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
  __proto__: null,
  default: $$Index,
  file: $$file,
  url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };
