/* empty css                                            */
import { a as createComponent, e as renderTemplate, r as renderHead } from '../chunks/astro/server_BTInrGQy.mjs';
import 'kleur/colors';
import 'clsx';
export { renderers } from '../renderers.mjs';

var __freeze = Object.freeze;
var __defProp = Object.defineProperty;
var __template = (cooked, raw) => __freeze(__defProp(cooked, "raw", { value: __freeze(raw || cooked.slice()) }));
var _a;
const $$LoginCliente = createComponent(async ($$result, $$props, $$slots) => {
  return renderTemplate(_a || (_a = __template(['<html lang="es"> <head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><title>Login de Cliente</title>', '</head> <body class="h-screen bg-gray-50 flex items-center justify-center flex-col  py-6 px-8"> <header class="self-start justify-self-start"> <a href="/" class="inline-flex items-center gap-2 mb-6 text-sm text-gray-600 hover:text-gray-900 transition-colors"> <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path> </svg>\nVolver a la Documentaci\xF3n\n</a> </header> <main class="flex flex-1 selft-center flex-col justify-center w-full max-w-md "> <div class="bg-white rounded-xl p-8 shadow-lg"> <div class="text-center mb-6"> <h1 class="text-2xl font-bold text-blue-700">\xC1rea de Clientes</h1> <p class="text-sm text-gray-500">Accede con tu RUC</p> </div> <!-- Mensaje de feedback --> <p id="mensaje" class="mb-4 text-center text-sm font-medium transition-opacity duration-200 opacity-0"></p> <!-- Formulario --> <form id="login-form" class="space-y-4"> <label class="block"> <span class="text-gray-700 text-sm font-medium">RUC</span> <input id="ruc" name="ruc" maxlength="13" type="number" required class="mt-1 w-full rounded-md border border-gray-300 px-3 py-2 outline-none focus:ring-2 focus:ring-blue-500" placeholder="Ingrese su RUC"> </label> <button id="submit-btn" type="submit" class="w-full flex justify-center items-center gap-2 rounded-md bg-blue-600 px-4 py-2 font-semibold text-white transition-colors hover:bg-blue-700 disabled:opacity-50 disabled:pointer-events-none"> <span>Ingresar</span> <svg id="spinner" class="h-5 w-5 animate-spin hidden" viewBox="0 0 24 24"> <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle> <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8v4l3.5-3.5L12 0v4a8 8 0 00-8 8h4z"></path> </svg> </button> </form> </div> </main> <!-- Script inline (is:inline para SSR) --> <script type="module">\n      const form = document.getElementById("login-form");\n      const mensajeEl = document.getElementById("mensaje");\n      const btn = document.getElementById("submit-btn");\n      const spinner = document.getElementById("spinner");\n\n      const mostrarMensaje = (texto, tipo = "error") => {\n        mensajeEl.textContent = texto;\n        mensajeEl.classList.remove(\n          "opacity-0",\n          "text-red-500",\n          "text-green-600"\n        );\n        mensajeEl.classList.add(\n          "opacity-100",\n          tipo === "success" ? "text-green-600" : "text-red-500"\n        );\n      };\n\n      form.addEventListener("submit", async (e) => {\n        e.preventDefault();\n\n        const ruc = form.ruc.value.trim();\n        if (!ruc) return mostrarMensaje("Ingrese su RUC");\n\n        // UI: bloquea bot\xF3n y muestra spinner\n        btn.disabled = true;\n        spinner.classList.remove("hidden");\n\n        try {\n          const res = await fetch("/api/auth/login-cliente", {\n            method: "POST",\n            headers: { "Content-Type": "application/json" },\n            body: JSON.stringify({ ruc }),\n          });\n          const data = await res.json();\n\n          if (res.ok && data.success) {\n            window.location.href = `/proyectos-clientes-detalles`;\n          } else {\n            mostrarMensaje(data.message || "RUC no encontrado");\n          }\n        } catch (err) {\n          console.error(err);\n          mostrarMensaje("No se pudo contactar al servidor");\n        } finally {\n          btn.disabled = false;\n          spinner.classList.add("hidden");\n        }\n      });\n    <\/script> </body> </html>'], ['<html lang="es"> <head><meta charset="UTF-8"><meta name="viewport" content="width=device-width, initial-scale=1.0"><title>Login de Cliente</title>', '</head> <body class="h-screen bg-gray-50 flex items-center justify-center flex-col  py-6 px-8"> <header class="self-start justify-self-start"> <a href="/" class="inline-flex items-center gap-2 mb-6 text-sm text-gray-600 hover:text-gray-900 transition-colors"> <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24"> <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path> </svg>\nVolver a la Documentaci\xF3n\n</a> </header> <main class="flex flex-1 selft-center flex-col justify-center w-full max-w-md "> <div class="bg-white rounded-xl p-8 shadow-lg"> <div class="text-center mb-6"> <h1 class="text-2xl font-bold text-blue-700">\xC1rea de Clientes</h1> <p class="text-sm text-gray-500">Accede con tu RUC</p> </div> <!-- Mensaje de feedback --> <p id="mensaje" class="mb-4 text-center text-sm font-medium transition-opacity duration-200 opacity-0"></p> <!-- Formulario --> <form id="login-form" class="space-y-4"> <label class="block"> <span class="text-gray-700 text-sm font-medium">RUC</span> <input id="ruc" name="ruc" maxlength="13" type="number" required class="mt-1 w-full rounded-md border border-gray-300 px-3 py-2 outline-none focus:ring-2 focus:ring-blue-500" placeholder="Ingrese su RUC"> </label> <button id="submit-btn" type="submit" class="w-full flex justify-center items-center gap-2 rounded-md bg-blue-600 px-4 py-2 font-semibold text-white transition-colors hover:bg-blue-700 disabled:opacity-50 disabled:pointer-events-none"> <span>Ingresar</span> <svg id="spinner" class="h-5 w-5 animate-spin hidden" viewBox="0 0 24 24"> <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle> <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8v4l3.5-3.5L12 0v4a8 8 0 00-8 8h4z"></path> </svg> </button> </form> </div> </main> <!-- Script inline (is:inline para SSR) --> <script type="module">\n      const form = document.getElementById("login-form");\n      const mensajeEl = document.getElementById("mensaje");\n      const btn = document.getElementById("submit-btn");\n      const spinner = document.getElementById("spinner");\n\n      const mostrarMensaje = (texto, tipo = "error") => {\n        mensajeEl.textContent = texto;\n        mensajeEl.classList.remove(\n          "opacity-0",\n          "text-red-500",\n          "text-green-600"\n        );\n        mensajeEl.classList.add(\n          "opacity-100",\n          tipo === "success" ? "text-green-600" : "text-red-500"\n        );\n      };\n\n      form.addEventListener("submit", async (e) => {\n        e.preventDefault();\n\n        const ruc = form.ruc.value.trim();\n        if (!ruc) return mostrarMensaje("Ingrese su RUC");\n\n        // UI: bloquea bot\xF3n y muestra spinner\n        btn.disabled = true;\n        spinner.classList.remove("hidden");\n\n        try {\n          const res = await fetch("/api/auth/login-cliente", {\n            method: "POST",\n            headers: { "Content-Type": "application/json" },\n            body: JSON.stringify({ ruc }),\n          });\n          const data = await res.json();\n\n          if (res.ok && data.success) {\n            window.location.href = \\`/proyectos-clientes-detalles\\`;\n          } else {\n            mostrarMensaje(data.message || "RUC no encontrado");\n          }\n        } catch (err) {\n          console.error(err);\n          mostrarMensaje("No se pudo contactar al servidor");\n        } finally {\n          btn.disabled = false;\n          spinner.classList.add("hidden");\n        }\n      });\n    <\/script> </body> </html>'])), renderHead());
}, "C:/Users/Jerick/DEV/AstroJS/doc-ecommerce/src/pages/login-cliente.astro", void 0);

const $$file = "C:/Users/Jerick/DEV/AstroJS/doc-ecommerce/src/pages/login-cliente.astro";
const $$url = "/login-cliente";

const _page = /*#__PURE__*/Object.freeze(/*#__PURE__*/Object.defineProperty({
  __proto__: null,
  default: $$LoginCliente,
  file: $$file,
  url: $$url
}, Symbol.toStringTag, { value: 'Module' }));

const page = () => _page;

export { page };
